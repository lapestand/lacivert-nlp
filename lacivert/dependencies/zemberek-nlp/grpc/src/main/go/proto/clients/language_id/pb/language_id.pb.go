// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.6.0
// source: language_id.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type LanguageIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Input          string `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	MaxSampleCount int32  `protobuf:"varint,2,opt,name=maxSampleCount,proto3" json:"maxSampleCount,omitempty"`
	TrGroup        bool   `protobuf:"varint,3,opt,name=trGroup,proto3" json:"trGroup,omitempty"`
	IncludeScores  bool   `protobuf:"varint,4,opt,name=includeScores,proto3" json:"includeScores,omitempty"`
}

func (x *LanguageIdRequest) Reset() {
	*x = LanguageIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_language_id_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LanguageIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LanguageIdRequest) ProtoMessage() {}

func (x *LanguageIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_language_id_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LanguageIdRequest.ProtoReflect.Descriptor instead.
func (*LanguageIdRequest) Descriptor() ([]byte, []int) {
	return file_language_id_proto_rawDescGZIP(), []int{0}
}

func (x *LanguageIdRequest) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *LanguageIdRequest) GetMaxSampleCount() int32 {
	if x != nil {
		return x.MaxSampleCount
	}
	return 0
}

func (x *LanguageIdRequest) GetTrGroup() bool {
	if x != nil {
		return x.TrGroup
	}
	return false
}

func (x *LanguageIdRequest) GetIncludeScores() bool {
	if x != nil {
		return x.IncludeScores
	}
	return false
}

type LanguageIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LangId   string      `protobuf:"bytes,1,opt,name=langId,proto3" json:"langId,omitempty"`
	IdResult []*IdResult `protobuf:"bytes,2,rep,name=idResult,proto3" json:"idResult,omitempty"`
}

func (x *LanguageIdResponse) Reset() {
	*x = LanguageIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_language_id_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LanguageIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LanguageIdResponse) ProtoMessage() {}

func (x *LanguageIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_language_id_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LanguageIdResponse.ProtoReflect.Descriptor instead.
func (*LanguageIdResponse) Descriptor() ([]byte, []int) {
	return file_language_id_proto_rawDescGZIP(), []int{1}
}

func (x *LanguageIdResponse) GetLangId() string {
	if x != nil {
		return x.LangId
	}
	return ""
}

func (x *LanguageIdResponse) GetIdResult() []*IdResult {
	if x != nil {
		return x.IdResult
	}
	return nil
}

type IdResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Score float64 `protobuf:"fixed64,2,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *IdResult) Reset() {
	*x = IdResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_language_id_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdResult) ProtoMessage() {}

func (x *IdResult) ProtoReflect() protoreflect.Message {
	mi := &file_language_id_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdResult.ProtoReflect.Descriptor instead.
func (*IdResult) Descriptor() ([]byte, []int) {
	return file_language_id_proto_rawDescGZIP(), []int{2}
}

func (x *IdResult) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *IdResult) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

var File_language_id_proto protoreflect.FileDescriptor

var file_language_id_proto_rawDesc = []byte{
	0x0a, 0x11, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x7a, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x65, 0x6b, 0x2e, 0x6c, 0x61,
	0x6e, 0x67, 0x69, 0x64, 0x22, 0x91, 0x01, 0x0a, 0x11, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6d, 0x61, 0x78, 0x53, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x74, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x22, 0x63, 0x0a, 0x12, 0x4c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x6c, 0x61, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6c, 0x61, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x08, 0x69, 0x64, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x65, 0x6b, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x69, 0x64, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x08, 0x69, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x30, 0x0a,
	0x08, 0x49, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x32,
	0xbd, 0x01, 0x0a, 0x11, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x49, 0x64, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x06, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x12,
	0x22, 0x2e, 0x7a, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x65, 0x6b, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x69,
	0x64, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x7a, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x65, 0x6b, 0x2e, 0x6c,
	0x61, 0x6e, 0x67, 0x69, 0x64, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0a, 0x44, 0x65, 0x74, 0x65,
	0x63, 0x74, 0x46, 0x61, 0x73, 0x74, 0x12, 0x22, 0x2e, 0x7a, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x65,
	0x6b, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x69, 0x64, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x7a, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x65, 0x6b, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x69, 0x64, 0x2e, 0x4c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x12, 0x0a, 0x0e, 0x7a, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x65, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_language_id_proto_rawDescOnce sync.Once
	file_language_id_proto_rawDescData = file_language_id_proto_rawDesc
)

func file_language_id_proto_rawDescGZIP() []byte {
	file_language_id_proto_rawDescOnce.Do(func() {
		file_language_id_proto_rawDescData = protoimpl.X.CompressGZIP(file_language_id_proto_rawDescData)
	})
	return file_language_id_proto_rawDescData
}

var file_language_id_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_language_id_proto_goTypes = []interface{}{
	(*LanguageIdRequest)(nil),  // 0: zemberek.langid.LanguageIdRequest
	(*LanguageIdResponse)(nil), // 1: zemberek.langid.LanguageIdResponse
	(*IdResult)(nil),           // 2: zemberek.langid.IdResult
}
var file_language_id_proto_depIdxs = []int32{
	2, // 0: zemberek.langid.LanguageIdResponse.idResult:type_name -> zemberek.langid.IdResult
	0, // 1: zemberek.langid.LanguageIdService.Detect:input_type -> zemberek.langid.LanguageIdRequest
	0, // 2: zemberek.langid.LanguageIdService.DetectFast:input_type -> zemberek.langid.LanguageIdRequest
	1, // 3: zemberek.langid.LanguageIdService.Detect:output_type -> zemberek.langid.LanguageIdResponse
	1, // 4: zemberek.langid.LanguageIdService.DetectFast:output_type -> zemberek.langid.LanguageIdResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_language_id_proto_init() }
func file_language_id_proto_init() {
	if File_language_id_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_language_id_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LanguageIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_language_id_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LanguageIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_language_id_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_language_id_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_language_id_proto_goTypes,
		DependencyIndexes: file_language_id_proto_depIdxs,
		MessageInfos:      file_language_id_proto_msgTypes,
	}.Build()
	File_language_id_proto = out.File
	file_language_id_proto_rawDesc = nil
	file_language_id_proto_goTypes = nil
	file_language_id_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LanguageIdServiceClient is the client API for LanguageIdService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LanguageIdServiceClient interface {
	Detect(ctx context.Context, in *LanguageIdRequest, opts ...grpc.CallOption) (*LanguageIdResponse, error)
	DetectFast(ctx context.Context, in *LanguageIdRequest, opts ...grpc.CallOption) (*LanguageIdResponse, error)
}

type languageIdServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewLanguageIdServiceClient(cc grpc.ClientConnInterface) LanguageIdServiceClient {
	return &languageIdServiceClient{cc}
}

func (c *languageIdServiceClient) Detect(ctx context.Context, in *LanguageIdRequest, opts ...grpc.CallOption) (*LanguageIdResponse, error) {
	out := new(LanguageIdResponse)
	err := c.cc.Invoke(ctx, "/zemberek.langid.LanguageIdService/Detect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *languageIdServiceClient) DetectFast(ctx context.Context, in *LanguageIdRequest, opts ...grpc.CallOption) (*LanguageIdResponse, error) {
	out := new(LanguageIdResponse)
	err := c.cc.Invoke(ctx, "/zemberek.langid.LanguageIdService/DetectFast", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LanguageIdServiceServer is the server API for LanguageIdService service.
type LanguageIdServiceServer interface {
	Detect(context.Context, *LanguageIdRequest) (*LanguageIdResponse, error)
	DetectFast(context.Context, *LanguageIdRequest) (*LanguageIdResponse, error)
}

// UnimplementedLanguageIdServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLanguageIdServiceServer struct {
}

func (*UnimplementedLanguageIdServiceServer) Detect(context.Context, *LanguageIdRequest) (*LanguageIdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Detect not implemented")
}
func (*UnimplementedLanguageIdServiceServer) DetectFast(context.Context, *LanguageIdRequest) (*LanguageIdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DetectFast not implemented")
}

func RegisterLanguageIdServiceServer(s *grpc.Server, srv LanguageIdServiceServer) {
	s.RegisterService(&_LanguageIdService_serviceDesc, srv)
}

func _LanguageIdService_Detect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LanguageIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LanguageIdServiceServer).Detect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zemberek.langid.LanguageIdService/Detect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LanguageIdServiceServer).Detect(ctx, req.(*LanguageIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LanguageIdService_DetectFast_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LanguageIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LanguageIdServiceServer).DetectFast(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zemberek.langid.LanguageIdService/DetectFast",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LanguageIdServiceServer).DetectFast(ctx, req.(*LanguageIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LanguageIdService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "zemberek.langid.LanguageIdService",
	HandlerType: (*LanguageIdServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Detect",
			Handler:    _LanguageIdService_Detect_Handler,
		},
		{
			MethodName: "DetectFast",
			Handler:    _LanguageIdService_DetectFast_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "language_id.proto",
}